<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Programador Livre</title><link href="https://berlotto.github.io/" rel="alternate"></link><link href="https://berlotto.github.io/feeds/all.atom.xml" rel="self"></link><id>https://berlotto.github.io/</id><updated>2021-01-24T16:42:00-03:00</updated><entry><title>Quero iniciar a programar, por qual linguagem eu começo ?</title><link href="https://berlotto.github.io/iniciar-a-programar.html" rel="alternate"></link><published>2021-01-24T13:00:00-03:00</published><updated>2021-01-24T13:00:00-03:00</updated><author><name>Sérgio Berlotto</name></author><id>tag:berlotto.github.io,2021-01-24:/iniciar-a-programar.html</id><summary type="html">&lt;p&gt;Esta é uma pergunta que muitos iniciantes em programação fazem, querem saber por qual linguagem eles devem iniciar a programar.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Esta é uma pergunta que muitos iniciantes em programação fazem, querem saber por qual linguagem eles devem iniciar a programar.&lt;/p&gt;
&lt;p&gt;Bem, é uma questão muito difícil de se resolver assim de cara, não existem linguagens que sejam para iniciar a programar, não existem linguagens que sejam para perfis definidos de programadores, existem sim linguagens de programação para muitos fins e com focos e métodos de desenvolvimento diferenciados.&lt;/p&gt;
&lt;p&gt;Vejamos, por exemplo&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Assembly&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;O Assembly foi provavelmente a primeira linguagem de programação da história, surgida na década de 50, época em que os computadores ainda usavam válvulas. A idéia do Assembly é usar um comando em substituição a cada instrução de máquina, ou seja, tornar legível as instruções que a máquina (o processador) entende, por isto é considerada uma linguagem de máquina. É bastante interessante e muito ágil, porém pouco usual nos tempos de hoje&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;C é uma linguagem criada a muitos anos, em 1972, é uma das primeiras linguagens em que o programador não precisaria conversar diretamente com sua máquina, com seu hardware, é imperativa e procedural e é de nível baixo, dando acesso à endereços de memória por exemplo, entre tantas outras coisas interessantes. Sua precursora é o C++, que tem uma programação orientada a objetos.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Java já é uma linguagem bem mais nova, criada no início dos anos 90, é de alto nível a orientada a objetos. É uma linguagem criada para facilitar ainda mais a forma como se programa, é muito mais fácil de entender um programa escrito com ela do que com C por exemplo. É uma linguagem muito portável, ou seja, que roda em muitos ambientes computacionais diferentes, trabalha com código pré-processado através de uma virtual machine. Atualmente, é ainda muito utilizada.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Perl&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;É uma linguagem fortemente funcional, criada em 87, é também de alto nível, é multi-plataforma, e seu foco inicial era de ser uma ferramenta completa para scripts CGI.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;É uma linguagem criada por Guido van Rossum em 1991, é de alto nível, interpretada (pois também trabalha através de bytecodes pré-gerados), seu foco é ser uma linguagem fácil, com uma curva de aprendizado bem pequena, onde o problema e o programador sejam as estrelas e não a linguagem, tem uma característica bem marcante que é: não utiliza chaves nem colchetes para definir blocos de código, mas sim a indentação (espaços ou TABs), o que meio que assusta alguns no início, mas depois ajuda muito. É completamente orientada a objetos mas multi-paradigma (funcional, orientada a objetos, imperativa). É também multi-plataforma e largamente vem sendo utilizada por grandes empresas e grandes soluções no mercado a fora, tanto em sites como em programas batch.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Outras…&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GO, Haskell, Ruby, PHP, Scala, Pascal, Javascript, Cobol, PL1, .NET, etc..etc..etc… são tantas linguagens que realmente fica complicado para quem não tem conhecimento saber qual escolher.&lt;/p&gt;
&lt;h2&gt;Mas o que devo levar em consideração para apontar àquela que vai ser a primeira ?&lt;/h2&gt;
&lt;p&gt;Bom, na minha opinião, primeiro você deve saber programar, aprender lógica e algorítmo com Português Estruturado, saber o que podemos utilizar em uma linguagem, laços, estruturas de decisão, de controle, tipos e formatos de dados possíveis, saber bem isto, matemática é a base para tudo. Depois disto, aí sim é que poderemos olhar para o “mercado de linguagens de programação”. Aí, o que conta é sua experiência com as linguagens, teste algumas, a dica aqui é pegar algum algorítmo, por exemplo, algum algoritmo de ordenação e implementar o mesmo em várias linguagens diferentes das quais você já tenha lido e tenha uma primeira impressão boa dela, ou tenha recebido alguma indicação de algum amigo, ou esteja apenas interessado nela… tente, execute, debugue, compile, e veja qual delas foi a mais “legal” para você, qual delas lhe deu mais produtividade, qual delas foi mais fácil, qual delas resolveu de forma mais efetiva o seu problema e qual delas se aplica àquele ambiente no qual você deseja trabalhar. Esta é a linguagem que você deve utilizar como sua primeira linguagem.&lt;/p&gt;
&lt;h2&gt;Eu devo utilizar esta linguagem por muito tempo ?&lt;/h2&gt;
&lt;p&gt;Meu amigo, nada dura para sempre não é ? Pois, sua primeira linguagem não é um contrato vitalício, não é uma arma na cabeça, você pode e deve utilizá-la enquanto você se sentir bem, enquanto ela estiver rendendo trabalho para você, enquanto ela tiver mercado, depois disto, aprenda outras linguagens. Para falar bem a verdade, você, hoje em dia, não tem como ser programador de uma única linguagem, você provavelmente necessitará aprender mais de uma linguagem para poder trabalhar, seja alocado em uma empresa, seja como freelancer (Aí sim é que o bicho pega! Leia sobre ‘fullstack developer’ também). Eu sou da opinião que: sintaxe a gente olha na documentação, o que importa é saber programar bem, saber como resolver os problemas, e conhecer até onde a linguagem escolhida pode ir, de resto a documentação da linguagem nos dá os detalhes. Já se foi o tempo em que o programador tinha a syntaxe de todos os comandos da sua linguagem na cabeça, já era. Claro, conforme você trabalha mais e mais com uma linguagem principal, a syntaxe e os macetes da linguagem vão ficando gravados na sua memória então, quanto mais você programar e utilizar a mesma linguagem, mais produtivo e efetivo você será.&lt;/p&gt;
&lt;h2&gt;Quantas linguagens eu devo aprender ?&lt;/h2&gt;
&lt;p&gt;Isto somente o tempo dirá… você pode programar porque gosta ou pode programar porque precisa, ou pode fazer os dois também. Deixe-se levar pelo mercado ou force-o a seguir o caminho que você gostaria. Eu já programei, em minha vida de dev, em umas 10,12 linguagens diferentes pelo menos, hoje em dia meu foco é Python, mas não somente Python, preciso saber também PHP, Javascript, ShellScript, HTML/CSS (mesmo não sendo exatamente linguagens), Ruby, e por aí vai… eu realmente gosto do que faço, escolhi Python e tento forçar o mercado a aceitar o que gosto, faço os projetos do jeito que gosto e que são aceitos pelo cliente, já passei da fase de deixar o mercado me ditar em que linguagem eu irei trabalhar.&lt;/p&gt;
&lt;h2&gt;E por fim…&lt;/h2&gt;
&lt;p&gt;Na real, você viu que não se tem uma ou outra linguagem que seja utilizada para você iniciar, você viu aqui que existem formas de se chegar a ela, cada pessoa, cada programador é diferente, cada mercado tem sua cartela de possibilidades. Teste as opções e escolha aquela que lhe deixa mais feliz ! Fora isto, no meio do caminho, troque se for necessário, não se prenda a paradigmas, a mercados e opiniões, invista em você como programador e seja um ótimo programador. O resto, vem como resultado.&lt;/p&gt;</content><category term="carreira"></category><category term="programar"></category><category term="iniciar"></category><category term="linguagem"></category></entry><entry><title>Comunicação — Um pilar do trabalho remoto</title><link href="https://berlotto.github.io/comunicacao-pilar-trabalho-remoto.html" rel="alternate"></link><published>2016-08-15T13:00:00-03:00</published><updated>2021-01-24T16:42:00-03:00</updated><author><name>Sérgio Berlotto</name></author><id>tag:berlotto.github.io,2016-08-15:/comunicacao-pilar-trabalho-remoto.html</id><summary type="html">&lt;p&gt;Trabalhar de forma remota é uma situação desejada por muitos profissionais do mercado principalmente de freelancer. É uma situação ao mesmo tempo cômoda e desafiadora...&lt;/p&gt;</summary><content type="html">&lt;p&gt;Trabalhar de forma remota é uma situação desejada por muitos profissionais do mercado principalmente de freelancer. É uma situação ao mesmo tempo cômoda e desafiadora, que nos dá felicidade e satisfação e mas cobra dedicação e esforço.&lt;/p&gt;
&lt;p&gt;Trabalhando de forma remota, tanto nós desenvolvedores, bem como profissionais de outras áreas, ficamos distantes fisicamente dos nossos clientes (ou empregadores) no nosso dia-a-dia, porém não é por isto que devemos nos afastar deles.&lt;/p&gt;
&lt;p&gt;O trabalho como freelancer é algo que ainda gera muitas dúvidas e revela muitas desconfianças para muitas pessoas e empresas e, também, aos profissionais que queiram se aventurar neste formato de trabalho. Mas não é por menos, até então todos os profissionais da empresas encontram-se reunidos em uma ou outra sala, onde, através de um aceno, um grito ou até um rápido telefone pelo ramal, no próximo minuto podem estar conversando e trocando ideias cara a cara. Esta é a forma mais tradicional e mais utilizada no mercado, utilizada nas empresas de TI até os dias de hoje.&lt;/p&gt;
&lt;p&gt;Mas os tempos mudam, no mundo de TI tudo anda muito mais rápido, novidades são apresentadas todos os dias e, até mesmo nos processos e formas de contratação, apesar de não tão rápido, mudanças também ocorrem.&lt;/p&gt;
&lt;p&gt;Uma das novidades na questão de formato de trabalho hoje em dia é o trabalho remoto. Ainda muito desejado, ainda muito visto como vida fácil, ainda muito místico, já está se tornando uma realidade aqui no nosso país, no exterior já vem sendo mais amplamente utilizado por suas facilidades tanto na contratação de profissionais, dos melhores profissionais, quanto na execução por profissionais dedicados e estudiosos.&lt;/p&gt;
&lt;p&gt;Mas a questão aqui não é avaliar de fato o trabalho remoto no Brasil, mas sim tocar em um ponto muito importante e que, para mim, é um pilar para o bom trabalho remoto ser executado: COMUNICAÇÃO.&lt;/p&gt;
&lt;p&gt;A boa comunicação no trabalho remoto é uma obrigação de duas vias, tanto do contratante quanto do contratado. Mas por que ? Justamente pelo que mencionei alguns parágrafos acima: as dúvidas e desconfianças que este formato de trabalho ainda gera nas pessoas.&lt;/p&gt;
&lt;p&gt;&lt;img alt="comunicacao por fio em latinhas" src="https://berlotto.github.io/latinha.png"&gt;&lt;/p&gt;
&lt;p&gt;O bom profissional remoto começa com sua boa comunicação desde a primeira conversa com seu cliente, é necessário SEMPRE deixá-lo ciente de tudo que você é ou não capaz de fazer, deixar muito claro qual sua disponibilidade para fazer o trabalho, dar um orçamento o mais correto o possível, não adicionar inverdades ou soluções mirabolantes para o problema, e principalmente responder todas as dúvidas dele. Isto é um acerto inestimável, tanto para manter seu cliente quanto para não dar o famoso “tiro no pé”, pois tudo que você disser ou prometer você será cobrado posteriormente, pode ter certeza.&lt;/p&gt;
&lt;p&gt;Durante a execução do trabalho, é igualmente muito importante manter a comunicação por conta dos fatos que a vida nos faz passar, problemas podem ocorrer, sejam pessoais, sejam técnicos, seu cliente deve estar confiante sempre sabendo que você o manterá a par de qualquer atraso, de você o avisará de qualquer necessidade de requisitos que possa ter e tudo mais.&lt;/p&gt;
&lt;p&gt;Da mesma forma, seu cliente deve se comprometer de avisar-lhe qualquer mudança de planos para o produto, primeiro para que você possa se programar e ajustar o trabalho para dar o seu melhor nesta nova situação, segundo para que você pode também informá-lo se haverá mudança no valor já acordado, e terceiro para que você também possa confiar de fato na nele.&lt;/p&gt;
&lt;p&gt;Uma confiança mútua deve haver ai, contratado→contratante, contratante→ contratado. Ambos os lados devem estar muito sossegados e cientes de tudo que ocorre que seja pertinente ao trabalho contratado para que a experiência ocorra sem problemas entre as partes do início ao fim.&lt;/p&gt;
&lt;p&gt;&lt;img alt="duas pessoas conversando" src="https://berlotto.github.io/static/posts/comunicacao/aperto-mao.png"&gt;&lt;/p&gt;
&lt;p&gt;Um cliente que não paga na data prometida, que muda planejamento ou produto de última hora, que não conversa com o profissional para alinhar novos caminhos ou dificuldades, que não cumpre promessas que foram feitas, bem como um profissional que não avisa de atrasos, que não avisa dificuldades ou novas necessidades, que não entrega os produtos no prazo, que também não cumpre com as promessas feitas não externam confiança, causam mal a si mesmos, pois, eu não gostaria de ser nem o profissional nem a empresa que é mal falada. Pois é, a tal “rádio corredor”, que na verdade não é no corredor, é online, acontece neste meio também, ficamos sabendo quais as empresas que se pode ou não trabalhar como remoto e as empresas ficam sabendo quais os profissionais não são de tanta confiança.&lt;/p&gt;
&lt;p&gt;Um profissional que sabe se comunicar tem geralmente uma vantagem sobre os outros, ele ganha a confiança do mercado, ele consegue montar e manter sua rede de contatos e clientes, geralmente será muito bem visto por todos. Um bom profissional deve sempre fazer de tudo para conseguir manter sua palavra, pois em ambiente remoto não se tem o “olho-no-olho” que geralmente diz bastante sobre as pessoas, uma conversa por skype não é a mesma coisa, então a sua palavra é tudo que você tem na maioria dos casos.&lt;/p&gt;
&lt;p&gt;Claro, há quem diga que se tem também a forma jurídica ou judicial da coisa, contratos, cláusulas, etc e tal, mas eu não creio que isto vá garantir muita coisa para você freelancer, claro existem casos e casos e não descarto isto, mas acho que não deva ser o foco.&lt;/p&gt;
&lt;p&gt;Em fim, comunicação é muito importante, e o grande resumo e lição de tudo é: Informe e mantenha-se informado! Cliente e profissional devem ser quase amigos neste quesito, e isto vale também para o time de profissionais que trabalha com você. Um time competente e conhecedor de todos os detalhes conseguirá ir muito mais longe.&lt;/p&gt;</content><category term="homeoffice"></category><category term="comunicacao"></category><category term="homeoffice"></category></entry><entry><title>Mercado de desenvolvimento, porque aprender e como iniciar a programar</title><link href="https://berlotto.github.io/mercado-python-porque-como.html" rel="alternate"></link><published>2016-03-01T13:00:00-03:00</published><updated>2021-01-24T16:42:00-03:00</updated><author><name>Sérgio Berlotto</name></author><id>tag:berlotto.github.io,2016-03-01:/mercado-python-porque-como.html</id><summary type="html">&lt;p&gt;O mercado de programação é um mercado muito dinâmico, é um mercado que  hoje você está em alta, e amanhã você já não está mais.&lt;/p&gt;</summary><content type="html">&lt;p&gt;O mercado de programação é um mercado muito dinâmico, é um mercado que  hoje você está em alta, e amanhã você já não está mais. E além disto, tem o troca troca de linguagens de programação, até então a “grande sacada” para entrar no mercado era programar em Java... até então !&lt;/p&gt;
&lt;p&gt;Mas, programar java não é mais a melhorar coisa a fazer ? Eu, Sérgio Berlotto, em minha humilde opinião pessoal lhe digo: não. Java Ainda está no mercado, e vai continuar por muito tempo ainda no mercado, e digo isto tomando como exemplo outras linguagens mais antigas como Cobol por exemplo, existe uma séria de sistemas em cobol que tem que receber manutenção ainda, e com a quantidade de sistemas feitos em java acredito que ocorra a mesma coisa futuramente, o profissional Java vai trabalhar em manutenção somente. &lt;/p&gt;
&lt;h3&gt;Tah, mas e qual é a grande sacada ?&lt;/h3&gt;
&lt;p&gt;De novo, na minha humilde opinião é: &lt;/p&gt;
&lt;p&gt;Programador precisa conhecer não mais uma linguagem, mas sim várias linguagens, pois os sistemas estão muito variados e muito diversificados em suas estruturas. O que você precisa saber mesmo é lógica, matemática, isto sim nunca pode faltar.&lt;/p&gt;
&lt;p&gt;Syntaxe agente não tem mais que saber de cor, syntaxe está na documentação, bibliotecas também, a mesma coisa, tudo está documentado. Pois uma boa linguagem de programação tem tudo a seu respeito documentado e de fácil acesso ao desenvolvedor.&lt;/p&gt;
&lt;h3&gt;E o mercado de Python ?&lt;/h3&gt;
&lt;p&gt;Este vem crescendo cada vez mais. O Python já uma linguagem que ganhou o seu lugar no coração de muitas empresas, e empresas grandes como Google, Nasa, o Governo Fed. Brasileiro, entre outras, mas ainda o mercado local, o mercado daqui, aquele que me emprega e paga minhas contas, ainda não está muito visivel, mas aos poucos as vagas vem aparecendo. E quanto mais agente, nós programadores home-office utilizarmos o python e mostrar-mos o seu poder, mais esta linguagem vai estar disponível em vagas de emprego remuneradas.O Python ainda vai crescer muito quando entrar em definitivo nas escolas e faculdades.&lt;/p&gt;
&lt;h3&gt;E porque Python ?&lt;/h3&gt;
&lt;p&gt;Python é uma linguagem que foi pensada e desenhada com foco no programador. Python dá muitas liberdades ao programador, mas com bastante segurança. Além disto, é uma linguagem que roda em muitas plataformas, sendo possível fazer um script python compatível com qualquer sistema operacional. Imagina seu script Python controlando a sua geladeira ? Hã ? Que tal ? Isto é possível. &lt;/p&gt;
&lt;p&gt;Com python conseguimos atingir praticamente todo e qualquer mercado de programação:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Websites&lt;/li&gt;
&lt;li&gt;Rotinas de processamento&lt;/li&gt;
&lt;li&gt;Mineração&lt;/li&gt;
&lt;li&gt;Comunicação com periféricos&lt;/li&gt;
&lt;li&gt;Controle de máquina&lt;/li&gt;
&lt;li&gt;Servidor&lt;/li&gt;
&lt;li&gt;Cliente&lt;/li&gt;
&lt;li&gt;Desktop&lt;/li&gt;
&lt;li&gt;Celular/Tablet&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A documentção do Python é uma das melhores. Ao meu ver muito organizada, e bem separada para fácil entendimento. Lá você encontra resposta para muitos dos seus percalços.
Além disto, seja você programador de qualquer linguagem que seja, provavelmente não terá muito problema para iniciar no Python, porque python é uma linguagem multiparadigma, com ele você consegue criar programas em vários métodos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Orientado a objetos&lt;/li&gt;
&lt;li&gt;Estruturada&lt;/li&gt;
&lt;li&gt;Funcional&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Na verdade, isto que falei sobre python não é novo, é o que todos sabem, é o que todos falam sobre Python. Você vai ver mesmo é no seu dia a dia programando Python o porque de trabalhar com esta linguagem. &lt;/p&gt;
&lt;p&gt;Programar python é algo que te deixa feliz, é algo que te faz entender mais os problemas mesmo do que programá-los. Programar python é quenem ter um filho pequeno e vè-lo crescer, a cada dia tem uma palavra nova, uma ação diferente e sempre tem algo a para te alegrar ! Isto é Python, para mim é uma qualidade de vida !&lt;/p&gt;
&lt;p&gt;Ok, agora, como começar a programar Python ?&lt;/p&gt;
&lt;p&gt;Vamos fazer um hello world ?&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;World&lt;/span&gt;&lt;span class="err"&gt;!”&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Agora salve como &lt;code&gt;hello.py&lt;/code&gt; e rode no terminal de comando:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python hello.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;Gostou ?&lt;/h3&gt;
&lt;p&gt;Então amigo, python não é só isto, python é muito mais que isto, e para você iniciar a programar python, lhe indico dois pontos de partida:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Livro &lt;strong&gt;Python para Desenvolvedores&lt;/strong&gt; – É um livro, criado por Luiz. E. Borges, com licença Creative Commons, que lhe ensina Python somente, sem lhe ensinar a programar, é voltado para quem já é desenvolvedor de software e quer aprender a linguagem somente.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Link: &lt;a href="http://ark4n.wordpress.com/python/"&gt;http://ark4n.wordpress.com/python/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Livro &lt;strong&gt;Aprenda Computação com Python&lt;/strong&gt; – É um trabalho comunitário de tradução do livro “How to Think Like a Computer Scientist: Learning with Python", de Allen Downey, Jeffrey Elkner e Chris Meyers, e é voltado para você que quer aprender a programar também, quer aprender mais sobre lógica.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Link: &lt;a href="https://aprendendo-computacao-com-python.readthedocs.io/en/latest/"&gt;https://aprendendo-computacao-com-python.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;E de resto, leia bastamte, converse sobre Python com seus colegas, vá a eventos sobre Python, veja palestrar, acompanhe as postagens e seja feliz programando com Python!&lt;/p&gt;</content><category term="carreira"></category><category term="mercado"></category><category term="carreira"></category><category term="python"></category></entry><entry><title>Crie, execute e compartilhe seu código online</title><link href="https://berlotto.github.io/crie-execute-compartilhe-codigo-online.html" rel="alternate"></link><published>2015-10-30T13:00:00-02:00</published><updated>2021-01-24T16:42:00-03:00</updated><author><name>Sérgio Berlotto</name></author><id>tag:berlotto.github.io,2015-10-30:/crie-execute-compartilhe-codigo-online.html</id><summary type="html">&lt;p&gt;Compartilhar, ensinar, ver ao vivo, pedir ajuda, testar um trecho de lógica, de syntaxe, de resultado, e até programar sistemas inteiros!&lt;/p&gt;</summary><content type="html">&lt;p&gt;Compartilhar, ensinar, ver ao vivo, pedir ajuda, testar um trecho de lógica, de syntaxe, de resultado, e até programar sistemas inteiros! Para tudo isto servem estes sites, estas ótimas ferramentas que servem de ferramenta para algumas destas tarefas para nós desenvolvedores&lt;/p&gt;
&lt;p&gt;Compartilhar seu código por email? Chato isso né !
Colocar códigos imensos na janela do chat/grupo? Os admins que “adoram” hehe&lt;/p&gt;
&lt;p&gt;Vamos ver vários exemplos de sites que permitem que você, programador, consiga executar códigos online, sem a necessidade de ter um ambiente todo configurado na sua máquina. Claro, que existem muitos tipos diferentes, com características diferentes e muitos outros também que acabarei por não citar aqui.&lt;/p&gt;
&lt;p&gt;Fora isto, nem tem muito o que explicar, na real o mais interessante é você olhar um por um e decidir qual lhe agrada mais:&lt;/p&gt;
&lt;p&gt;Vamos a lista:&lt;/p&gt;
&lt;h3&gt;Repl.it&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="https://repl.it/languages/python3"&gt;https://repl.it/languages/python3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: Você consegue criar, rodar, salvar no browser ou na sua conta quando logado e ainda compartilhar o código criado.&lt;/p&gt;
&lt;h3&gt;Python Anywhere&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="https://pythonanywhere.com"&gt;https://pythonanywhere.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: Você tem um ambiente completo de python rodando em uma espécie de máquina virtual. Assim você consegue criar uma applicação web facilmente e testá-la em uma url como “minhaapp.pythonanywhere.com”. Planos pagos tem mais disponibilidade de recursos.&lt;/p&gt;
&lt;h3&gt;Python Tutor&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="http://www.pythontutor.com/"&gt;http://www.pythontutor.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: É um ambiente onde você pode criar seus códigos e testá-los passo a passo, visualizando assim como é executado seu código. Além disto pode incorporar em um site e compartilhar as sessões para todos verem o código executando.&lt;/p&gt;
&lt;h3&gt;CodeChef Ide&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="https://www.codechef.com/ide"&gt;https://www.codechef.com/ide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: É um editor com execução online, mais simples, tanto que não dá para compartilhar,  mas dá para fazer o download do seu código.&lt;/p&gt;
&lt;h3&gt;Cloud 9&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="https://c9.io/"&gt;https://c9.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: Este já é um ambiente muito mais completo, onde o usuário cria uma instância de virtual machine com acesso todo pelo browser, ssh, editor online, e muitas coisas mais…&lt;/p&gt;
&lt;h3&gt;CoderPad&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="https://coderpad.io/"&gt;https://coderpad.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: Este é um editor online e colaborativo, porém ele é pago, podendo ser testado por 7 dias.&lt;/p&gt;
&lt;h3&gt;Live Sympy&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="http://live.sympy.org"&gt;http://live.sympy.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: É um ambiente online de execução de testes para uso com a biblioteca Sympy, que é uma lib interessantíssima para uso de matemática com Python.&lt;/p&gt;
&lt;h3&gt;Sage Math Cloud&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="https://cloud.sagemath.com/"&gt;https://cloud.sagemath.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: Um ambiente completo de execução de códigos matemáticos e estatísticos, não executando somente Python, R, Sagemath, etc..&lt;/p&gt;
&lt;h3&gt;Code Bunk&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="http://codebunk.com"&gt;http://codebunk.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: Um editor de código online e colaborativo, bem interessante, com design bonito com editor, shell, chat, play das edições da seção, etc.&lt;/p&gt;
&lt;h3&gt;Codeshare&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="http://codeshare.io/"&gt;http://codeshare.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: Também um editor online para codificação compartilhada, interessante para entrevistas, tem chat de vídeo.&lt;/p&gt;
&lt;h3&gt;Koding&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="https://koding.com/"&gt;https://koding.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: Outro ambiente onde se pode ter um espaço completo de trabalho, com editor e execução dos programas.&lt;/p&gt;
&lt;p&gt;Claro, e eu não poderia deixar de citar este site que a muitos anos vem ajudando a desenvolvedores e usuários a compartilhar grandes códigos e textos de logs, mesmo sem executar nada:&lt;/p&gt;
&lt;h3&gt;Pastebin&lt;/h3&gt;
&lt;p&gt;Acesso: &lt;a href="http://pastebin.com/"&gt;http://pastebin.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Características: Um site para “colar” trechos de texto, seja código ou não. Pode-se selecionar o tipo de código, para syntax hilighting, data de expiração se desejar, se é publico ou privado e o nome do snippet. É simples e funcional. &lt;/p&gt;
&lt;h2&gt;Conclusão&lt;/h2&gt;
&lt;p&gt;Enfim… na verdade são vários, e como podemos ver na lista, temos varias características diferentes, desde os mais simples até os mais avançados.&lt;/p&gt;
&lt;p&gt;O que eu acho interessante é termos pelo menos alguns destes guardados na manga, em uma listinha de favoritos no seu browser, para que facilmente possamos acessá-los na hora da necessidade. Compartilhar seções de codificação para um grupo de freelancers é bem interessante! &lt;/p&gt;
&lt;p&gt;Eu gosto também, por exemplo, de dar aulas de Python, porém nem sempre temos um projetor disponível, e assim, um site como o Codeshare ajuda muito. Se vocês estiverem participando de um hangout ? Também.. se querem pedir ajuda em algum fórum, lista, chat, whatsapp, slack, facebook, hangouts, seja onde for, não cole códigos.. cole links.. use o pastebin por exemplo. E por ai vai…&lt;/p&gt;
&lt;p&gt;Acho sinceramente que esta listinha está bem honesta. Aproveite-a bem.. dê uma olhada nos sites, e avalie qual é o melhor para você.&lt;/p&gt;
&lt;p&gt;E se tiver algum que eu acabei não citando aqui (o que obviamente tem) por favor, comente logo abaixo, comente também o que você acha destes ambientes, se gosta, ama ou odeia, conte para nós alguma experiência interessante que tenha tido nestes ambientes.. ok !&lt;/p&gt;</content><category term="internet"></category><category term="editore"></category><category term="online"></category><category term="codigo"></category></entry></feed>